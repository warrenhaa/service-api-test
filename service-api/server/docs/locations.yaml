paths:
  /locations/:                # path of the user from your endpoint
    post:                 # endpoint request type (post request)
      tags:               # Tag property
        - Locations            # Value of the tag
      summary: creates a new location
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []      
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name:     # name of request, can be any name
        description: It creates a location
        required: false   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/locations' 
      responses:          # server responses
        201:
          description: An object with location details
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - Locations            # Value of the tag
      summary: gets all locations
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []      
      produces:
      - application/json
      responses:          # server responses
        200:
          description: An array of locations
  /locations/{id}:                # path of the user from your endpoint
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - Locations            # Value of the tag
      summary: get one location
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []
      parameters:         # request parameters
      - in: path          # request body
        name: id   # name of request, can be any name
        schema:
          type: string
          format: uuid                   
      produces:
      - application/json
      responses:          # server responses
        200:
          description: An object with location detail
    put:                 # endpoint request type (post request)
      tags:               # Tag property
        - Locations            # Value of the tag
      summary: update one location
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []      
      produces:
      - application/json
      parameters:         # request parameters
      - in: path          # request body
        name: id   # name of request, can be any name
        schema:
          type: string
          format: uuid
      responses:          # server responses
        200:
          description: An object with a location type detail
    delete:                 # endpoint request type (post request)
      tags:               # Tag property
        - Locations            # Value of the tag
      summary: Deletes a location
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []
      parameters:         # request parameters
      - in: path          # request body
        name: id   # name of request, can be any name
        schema:
          type: string
          format: uuid              
      produces:
      - application/json
      responses:          # server responses
        200:
          description: 
definitions:        # Schema defination for request body
  locations:
    type: object
    properties:
      name:
        type: string
      container_id:
        type: string
        format: uuid
      type_id:
        type: string
        format: uuid
      notes:
        type: string
      line_1:
        type: string
      line_2:
        type: string
      line_3:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      zip_code:
        type: string
      geo_location:
        type: object
      total_area:
        type: number
        format: double