paths:
  /devices:                # path of the devices from your endpoint
    post:                 # endpoint request type (post request)
      tags:               # Tag property
        - Devices            # Value of the tag
      summary: creates a new Device
      produces:
      - application/json
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []      
      parameters:         # request parameters
      - in: body          # request body
        name:     # name of request, can be any name
        description: It creates a device
        required: false   # can also be true depending on devices preference
        schema:           # Schema definition
          $ref: '#/definitions/devices' 
      responses:          # server responses
        200:
          description: An object with devices details
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - Devices            # Value of the tag
      summary: gets all devices
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []
      parameters:         # request parameters
      - in: query          # request body
        name: gateway_id   # name of request, can be any name
        required: false
        schema:
          type: string
          format: uuid                   
      produces:
      - application/json
      responses:          # server responses
        200:
          description: An array of devices          
    delete:                 # endpoint request type (post request)
      tags:               # Tag property
        - Devices            # Value of the tag
      summary: deletes a Device
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []
      parameters:         # request parameters
      - in: path          # request body
        name: id   # name of request, can be any name
        schema:
          type: string
          format: uuid              
      produces:
      - application/json
      responses:          # server responses
        200:
          description:
    put:                 # endpoint request type (post request)
      tags:               # Tag property
        - Devices            # Value of the tag
      summary: updates a Device . Can link/unlink device to location_id, gateway_id and update supported parameters
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []
      parameters:         # request parameters
      - in: path          # request body
        name: id   # name of request, can be any name
      - in: body          # request body
        schema:
          $ref: '#/definitions/devices'           
      produces:
      - application/json
      responses:          # server responses
        200:
          description:
  /devices/{id}:
    get:
      tags:               # Tag property
        - Devices            # Value of the tag
      summary: gets a device
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []      
      produces:
      - application/json
      responses:          # server responses
        200:
          description: An object of devices            
  /devices/location/{id}:
    get:
      tags:               # Tag property
        - Devices            # Value of the tag
      summary: gets all devices of a location_id
      security:
        - bearerAuth: []   # Use OAuth with a different scope
        - code: []      
      produces:
      - application/json
      responses:          # server responses
        200:
          description: An array of devices            
definitions:        # Schema defination for request body
  devices:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      model:
        type: string
      serial_number:
        type: string
      mac_address:
        type: string
      firmware_verison:
        type: string
      gateway_id:
        type: string
        format: uuid
      location_id:
        type: string
        format: uuid
      device_code:
        type: string
