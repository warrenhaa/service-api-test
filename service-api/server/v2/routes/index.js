import express from 'express';
import invitationRouter from './Invitation';
import statusRouter from './Status';
import testAuthRouter from './TestAuth';
import userRouter from './Users';
import accessPermissionRouter from './AcessPermission';
import corePermissionRouter from './CorePermission';
import corePermissionMappingRouter from './CorePermissionMapping';
import addressesRouter from './Addresses';
import companiesRouter from './Companies';
import locationTypesRouter from './LocationTypes';
import locationsRouter from './Locations';
import companyVerificationStatus from './CompanyVerificationStatus';
import activityLogsRouter from './ActivityLogs';
import activityConfigsRouter from './ActivityConfigs';
import devicesRouter from './Devices';
import alertsRouter from './Alerts';
import occupantsRouter from './Occupants';
import modelsRouter from './Models';
import userPreferencesRouter from './UserPreferences';
import oneTouchRouter from './OneTouch';
import preDefinedRouter from './PreDefined';
import ruleGroupsRouter from './RuleGroup';
import singleControlsRouter from './SingleControls';
import schedules from './Schedules';
import ErrorCodesRouter from './ErrorCodes';
import alertCommunicationConfigs from './AlertCommunicationConfigs';
import jobsRouter from './jobs';
import fixUsers from './FixExistingUser';
import cameraRouter from './Camera';

const router = express.Router();

router.use('/invitations', invitationRouter);
router.use('/test', testAuthRouter);
router.use('/users', userRouter);
router.use('/permissions', accessPermissionRouter);
router.use('/core_permissions', corePermissionRouter);
router.use('/core_permissions_mapping', corePermissionMappingRouter);
router.use('/adresses', addressesRouter);
router.use('/companies', companiesRouter);
router.use('/location_types', locationTypesRouter);
router.use('/locations', locationsRouter);
router.use('/activity_logs', activityLogsRouter);
router.use('/activity_configs', activityConfigsRouter);
router.use('/company_verification_status', companyVerificationStatus);
router.use('/devices', devicesRouter);
router.use('/alerts', alertsRouter);
router.use('/occupants', occupantsRouter);
router.use('/models', modelsRouter);
router.use('/user_preferences', userPreferencesRouter);
router.use('/one_touch', oneTouchRouter);
router.use('/schedules', schedules);
router.use('/error_codes', ErrorCodesRouter);
router.use('/predefined_rules', preDefinedRouter);
router.use('/rule_groups', ruleGroupsRouter);
router.use('/fix_users', fixUsers);
router.use('/alert_communication_configs', alertCommunicationConfigs);
router.use('/single_controls', singleControlsRouter);
router.use('/jobs', jobsRouter);
router.use('/status', statusRouter);
router.use('/camera', cameraRouter);


export default router;
